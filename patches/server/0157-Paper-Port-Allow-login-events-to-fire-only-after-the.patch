From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoftikLord <dimap9986@gmail.com>
Date: Fri, 17 Mar 2023 16:18:44 +0500
Subject: [PATCH] 
 Paper-Port-Allow-login-events-to-fire-only-after-the-server-plugins-are-enabled
 
Credits to Paper: https://github.com/PaperMC/Paper/blob/ver/1.13.2/Spigot-Server-Patches/0431-Allow-login-events-to-fire-only-after-the-server-plu.patch
Event threads will simply block until they're ready to accept.


diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 55c6932bb490829c773a1c0406e8d5957a4bfdb1..5c982458e9380d024af5ab6c0f2b38fa46efb101 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -282,11 +282,40 @@ public class LoginListener implements PacketLoginInListener, ITickable {
             // Paper end
         }
     }
+    // Paper start - Delay async prelogin until plugins are ready
+    private static volatile Object blockingLogins = new Object();
+
+    public static void checkStartupAndBlock() {
+        final Object lock = LoginListener.blockingLogins;
+        if (lock != null) {
+            synchronized (lock) {
+                for (;;) {
+                    if (LoginListener.blockingLogins == null) {
+                        return;
+                    }
+                    try {
+                        lock.wait();
+                    } catch (final InterruptedException ignore) {// handled by the if statement above
+                        Thread.currentThread().interrupt();
+                    }
+                }
+            }
+        }
+    }
 
+    public static void allowLogins() {
+        final Object lock = LoginListener.blockingLogins;
+        synchronized (lock) {
+            LoginListener.blockingLogins = null;
+            lock.notifyAll();
+        }
+    }
+    // Paper end
     // Spigot start
     public class LoginHandler {
 
         public void fireEvents() throws Exception {
+                            LoginListener.checkStartupAndBlock(); // Paper - Delay async login events until plugins are ready
                             String playerName = i.getName();
                             java.net.InetAddress address = ((java.net.InetSocketAddress) networkManager.getSocketAddress()).getAddress();
                             java.util.UUID uniqueId = i.getId();
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 71a4b0a03781967c8dfe7a778a826ba87bab824a..976719b684792e288aec51fc0e5efb4031bbc67d 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -448,6 +448,7 @@ public abstract class MinecraftServer implements ICommandListener, Runnable, IAs
         this.f = null;
         this.g = 0;
         this.server.enablePlugins(org.bukkit.plugin.PluginLoadOrder.POSTWORLD); // CraftBukkit
+        LoginListener.allowLogins(); // Paper - Allow logins once postworld
     }
 
     protected void saveChunks(boolean flag) {
