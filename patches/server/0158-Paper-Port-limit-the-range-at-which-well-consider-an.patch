From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: SoftikLord <dimap9986@gmail.com>
Date: Fri, 17 Mar 2023 16:36:41 +0500
Subject: [PATCH] 
 Paper-Port-limit-the-range-at-which-well-consider-an-attackable-target

Credits to Paper: https://github.com/PaperMC/Paper/blob/ver/1.13.2/Spigot-Server-Patches/0399-limit-the-range-at-which-we-ll-consider-an-attackabl.patch
This patch aims to ensure that MCP World#getNearestAttackablePlayer
will not trigger chunk loads due to PathfinderGoalNearestAttackableTarget
performing a ray trace operation by pre-checking the maximum limit;

Given that the implementation shows that the limit should only ever
decrease when set, allowing us to skip further checks earlier on
when looking for an attackable entity

diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 5727cd873ad2094a9cb8e7f0f416baa59c06bb29..9d63dd139dcdde9b21eeb05c04840ebdd2055891 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -3059,9 +3059,13 @@ public abstract class World implements IBlockAccess {
 
         for (int i = 0; i < this.players.size(); ++i) {
             EntityHuman entityhuman1 = (EntityHuman) this.players.get(i);
-
+            // Paper start
+            // move distance check up, if set, check distance^2 is less than XZlimit^2, continue
+            // 4th method param is XZlimit (at least at the time of commit)
+            double d6 = entityhuman1.d(d0, entityhuman1.locY, d2);
+            if (d3 < 0.0D || d6 < d3 * d3)
             if (!entityhuman1.abilities.isInvulnerable && entityhuman1.isAlive() && !entityhuman1.isSpectator() && (predicate == null || predicate.apply(entityhuman1))) {
-                double d6 = entityhuman1.d(d0, entityhuman1.locY, d2);
+                // Paper end
                 double d7 = d3;
 
                 if (entityhuman1.isSneaking()) {
