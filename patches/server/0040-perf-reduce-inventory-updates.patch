From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ruViolence <78062896+ruViolence@users.noreply.github.com>
Date: Sun, 5 Jun 2022 05:48:17 +0500
Subject: [PATCH] perf: reduce inventory updates

Reduces the network load and prevents potential lag exploits.

diff --git a/src/main/java/this/core/lamius/Lamius/InventoryUpdateHelper.java b/src/main/java/this/core/lamius/Lamius/InventoryUpdateHelper.java
new file mode 100644
index 0000000000000000000000000000000000000000..f75fd894e8a94fcc0351bc93af6c339a9f3e1c6a
--- /dev/null
+++ b/src/main/java/this/core/lamius/Lamius/InventoryUpdateHelper.java
@@ -0,0 +1,127 @@
+package this.core.lamius.Lamius;
+
+import net.minecraft.server.EntityPlayer;
+import net.minecraft.server.EnumHand;
+import net.minecraft.server.EnumItemSlot;
+import net.minecraft.server.Item;
+import net.minecraft.server.ItemArmor;
+import net.minecraft.server.ItemArrow;
+import net.minecraft.server.ItemStack;
+import net.minecraft.server.ItemSword;
+import net.minecraft.server.ItemTool;
+import net.minecraft.server.Items;
+import net.minecraft.server.PacketPlayOutSetSlot;
+import net.minecraft.server.PlayerInventory;
+
+public class InventoryUpdateHelper {
+    public static void onLeftClick(EntityPlayer player, EnumHand hand, ItemStack itemInHand) {
+        if (itemInHand.isEmpty()) return;
+        if (shouldBeIgnored(itemInHand)) return;
+
+        Item item = itemInHand.getItem();
+
+        // Update if the item may be damaged on the clientside
+        if (item instanceof ItemSword || item instanceof ItemTool) {
+            player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, hand), itemInHand));
+        }
+    }
+
+    public static void onRightClick(EntityPlayer player, EnumHand hand, ItemStack itemInHand) {
+        if (shouldBeIgnored(itemInHand)) return;
+        // Update held item
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, hand), itemInHand));
+
+        Item item = itemInHand.getItem();
+
+        // Update armor slot on equip
+        if (item instanceof ItemArmor) {
+            EnumItemSlot armorSlotType = ((ItemArmor) item).c;
+            // If the armor slot is empty
+            if (player.getEquipment(armorSlotType).isEmpty()) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getArmorPacketSlot(armorSlotType), player.getEquipment(armorSlotType)));
+            }
+        }
+
+        if (item == Items.BOW) {
+            updateArrow(player);
+        }
+    }
+
+    public static void onBlockBreak(EntityPlayer player, ItemStack itemInMainHand) {
+        if (!(itemInMainHand.getItem() instanceof ItemSword)) return;
+        // Update held item
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), itemInMainHand));
+    }
+
+    public static void onBowShoot(EntityPlayer player) {
+        bow_update:
+        {
+            ItemStack itemInMainHand = player.b(EnumHand.MAIN_HAND);
+            if (itemInMainHand.getItem() == Items.BOW) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), itemInMainHand));
+                break bow_update;
+            }
+
+            ItemStack itemInOffHand = player.b(EnumHand.OFF_HAND);
+            if (itemInOffHand.getItem() == Items.BOW) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.OFF_HAND), itemInOffHand));
+            }
+        }
+
+        updateArrow(player);
+    }
+
+    public static void updateHeld(EntityPlayer player) {
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), player.b(EnumHand.MAIN_HAND)));
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.OFF_HAND), player.b(EnumHand.OFF_HAND)));
+    }
+
+    public static void updateHeld(EntityPlayer player, EnumHand hand) {
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, hand), player.b(hand)));
+    }
+
+    private static int getHeldItemPacketSlot(EntityPlayer player, EnumHand hand) {
+        return (hand == EnumHand.MAIN_HAND) ? (player.inventory.itemInHandIndex + 36) : 45;
+    }
+
+    private static int getArmorPacketSlot(EnumItemSlot slot) {
+        switch (slot) {
+            case HEAD: return 5;
+            case CHEST: return 6;
+            case LEGS: return 7;
+            case FEET: return 8;
+            default: throw new IllegalStateException("Unexpected value: " + slot);
+        }
+    }
+
+    private static void updateArrow(EntityPlayer player) {
+        ItemStack offHand = player.b(EnumHand.OFF_HAND);
+        if (offHand.getItem() instanceof ItemArrow) {
+            player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.OFF_HAND), offHand));
+            return;
+        }
+
+        ItemStack mainHand = player.b(EnumHand.MAIN_HAND);
+        if (mainHand.getItem() instanceof ItemArrow) {
+            player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), mainHand));
+            return;
+        }
+
+        PlayerInventory inventory = player.inventory;
+        for (int i = 0; i < inventory.getSize(); ++i) {
+            ItemStack itemstack = inventory.getItem(i);
+
+            if (itemstack.getItem() instanceof ItemArrow) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, i, itemstack));
+                return;
+            }
+        }
+    }
+
+    private static boolean shouldBeIgnored(ItemStack stack) {
+        Item item = stack.getItem();
+        if (item == Items.WRITABLE_BOOK) return true;
+        if (item == Items.WRITTEN_BOOK) return true;
+        return false;
+    }
+}
diff --git a/src/main/java/net/minecraft/server/BlockCauldron.java b/src/main/java/net/minecraft/server/BlockCauldron.java
index 366e886910e34db757394eef117e793fe0d67bba..645b2b2b1409097f953a95819e9bde774549a445 100644
--- a/src/main/java/net/minecraft/server/BlockCauldron.java
+++ b/src/main/java/net/minecraft/server/BlockCauldron.java
@@ -120,8 +120,10 @@ public class BlockCauldron extends Block {
                                 entityhuman.a(enumhand, itemstack1);
                             } else if (!entityhuman.inventory.pickup(itemstack1)) {
                                 entityhuman.drop(itemstack1, false);
+                                /* // Lamius start
                             } else if (entityhuman instanceof EntityPlayer) {
                                 ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
+                                */ // Lamius end
                             }
                         }
 
@@ -141,9 +143,11 @@ public class BlockCauldron extends Block {
                             itemstack1 = new ItemStack(Items.GLASS_BOTTLE);
                             entityhuman.b(StatisticList.J);
                             entityhuman.a(enumhand, itemstack1);
+                            /* // Lamius start - Reduce inventory updates
                             if (entityhuman instanceof EntityPlayer) {
                                 ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                             }
+                            */ // Lamius end
                         }
 
                         world.a((EntityHuman) null, blockposition, SoundEffects.M, SoundCategory.BLOCKS, 1.0F, 1.0F);
@@ -189,8 +193,10 @@ public class BlockCauldron extends Block {
                                 entityhuman.a(enumhand, itemstack1);
                             } else if (!entityhuman.inventory.pickup(itemstack1)) {
                                 entityhuman.drop(itemstack1, false);
+                                /* // Lamius start - Reduce inventory updates
                             } else if (entityhuman instanceof EntityPlayer) {
                                 ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
+                                */ // Lamius end
                             }
                         }
 
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 16a9e06438cd6f499beba7bee37fcc870913783a..7a82b1d4695ffcb67372015a8f603f530725ac73 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -1162,7 +1162,7 @@ public abstract class EntityHuman extends EntityLiving {
                         }
                         // CraftBukkit start - resync on cancelled event
                         if (this instanceof EntityPlayer) {
-                            ((EntityPlayer) this).getBukkitEntity().updateInventory();
+                            this.core.lamius.Lamius.InventoryUpdateHelper.onLeftClick((EntityPlayer) this, EnumHand.MAIN_HAND, this.b(EnumHand.MAIN_HAND)); // Lamius - Reduce inventory updates
                         }
                         // CraftBukkit end
                     }
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index b9886c68045c783c7ced0874411f0363a32232eb..3daf3d05fdd319bf7c798ec8e826c3eeb371affa 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2491,7 +2491,7 @@ public abstract class EntityLiving extends Entity {
 
                 if (event.isCancelled()) {
                     // Update client
-                    ((EntityPlayer) this).getBukkitEntity().updateInventory();
+                    this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld((EntityPlayer) this, this.cH()); // Lamius - Reduce inventory updates
                     ((EntityPlayer) this).getBukkitEntity().updateScaledHealth();
                     return;
                 }
@@ -2514,7 +2514,7 @@ public abstract class EntityLiving extends Entity {
 
             // Paper start - if the replacement is anything but the default, update the client inventory
             if (this instanceof EntityPlayer && !com.google.common.base.Objects.equal(defaultReplacement, itemstack)) {
-                ((EntityPlayer) this).getBukkitEntity().updateInventory();
+                this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld((EntityPlayer) this, this.cH()); // Lamius - Reduce inventory updates
             }
         }
 
diff --git a/src/main/java/net/minecraft/server/ItemBow.java b/src/main/java/net/minecraft/server/ItemBow.java
index 9cac4e6dd16d515ff81e6609134326d29d4ab574..51fa763fddc8b2d63b93f23b997680993085700f 100644
--- a/src/main/java/net/minecraft/server/ItemBow.java
+++ b/src/main/java/net/minecraft/server/ItemBow.java
@@ -110,7 +110,7 @@ public class ItemBow extends Item {
                         if (event.getProjectile() == entityarrow.getBukkitEntity()) {
                             if (!world.addEntity(entityarrow)) {
                                 if (entityhuman instanceof EntityPlayer) {
-                                    ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory();
+                                    this.core.lamius.Lamius.InventoryUpdateHelper.onBowShoot((EntityPlayer) entityhuman); // Lamius - Reduce inventory updates
                                 }
                                 return;
                             }
diff --git a/src/main/java/net/minecraft/server/ItemEnderPearl.java b/src/main/java/net/minecraft/server/ItemEnderPearl.java
index 65e53127b97a7476eaf3c778b488a0fcd226c83e..6b1ed8c65b7af325d74c20f725adf866e9992b15 100644
--- a/src/main/java/net/minecraft/server/ItemEnderPearl.java
+++ b/src/main/java/net/minecraft/server/ItemEnderPearl.java
@@ -17,7 +17,7 @@ public class ItemEnderPearl extends Item {
             entityenderpearl.a(entityhuman, entityhuman.pitch, entityhuman.yaw, 0.0F, 1.5F, 1.0F);
             if (!world.addEntity(entityenderpearl)) {
                 if (entityhuman instanceof EntityPlayer) {
-                    ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory();
+                    this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand); // Lamius - Reduce inventory updates
                 }
                 return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
             }
diff --git a/src/main/java/net/minecraft/server/ItemSnowball.java b/src/main/java/net/minecraft/server/ItemSnowball.java
index 6bb1106d9dc6ce8fac045f38a0f19041b6652d6b..7a5cfe43a90ff81309f5407dcc5a6c5e5fb8fe69 100644
--- a/src/main/java/net/minecraft/server/ItemSnowball.java
+++ b/src/main/java/net/minecraft/server/ItemSnowball.java
@@ -29,7 +29,7 @@ public class ItemSnowball extends Item {
 
                 world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.hp, SoundCategory.NEUTRAL, 0.5F, 0.4F / (ItemSnowball.j.nextFloat() * 0.4F + 0.8F));
             } else if (entityhuman instanceof EntityPlayer) {
-                ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory();
+                this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand); // Lamius - Reduce inventory updates
             }
         }
         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 012c9dd54db32b573109f5567851cd96b91699a0..a4df957aabc688a3cc414284f53b5ebadff8500a 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -243,7 +243,7 @@ public final class ItemStack {
             if (placeEvent != null && (placeEvent.isCancelled() || !placeEvent.canBuild())) {
                 enuminteractionresult = EnumInteractionResult.FAIL; // cancel placement
                 // PAIL: Remove this when MC-99075 fixed
-                placeEvent.getPlayer().updateInventory();
+                this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand); // Lamius - Reduce inventory updates
 
                 // Paper start
                 for (Map.Entry<BlockPosition, TileEntity> e : world.capturedTileEntities.entrySet()) {
@@ -435,7 +435,7 @@ public final class ItemStack {
                     org.bukkit.event.player.PlayerItemDamageEvent event = new org.bukkit.event.player.PlayerItemDamageEvent(entityplayer.getBukkitEntity(), item, i);
                     org.bukkit.Bukkit.getServer().getPluginManager().callEvent(event);
                     if (i != event.getDamage() || event.isCancelled()) {
-                        event.getPlayer().updateInventory();
+                        this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld(entityplayer); // Lamius - Reduce inventory updates
                     }
                     if (event.isCancelled()) return false;
                     i = event.getDamage();
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 8dedbe4c4e6198cd9659023022eab4d5335ef560..6f5f5ab508eb6026553c2719e4ce1bdd042da755 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1062,7 +1062,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
             }
 
             if (cancelled) {
-                this.player.getBukkitEntity().updateInventory(); // SPIGOT-2524
+                this.core.lamius.Lamius.InventoryUpdateHelper.onRightClick(this.player, enumhand, itemstack); // SPIGOT-2524 // Lamius - Reduce inventory updates
             } else {
                 this.player.playerInteractManager.a(this.player, worldserver, itemstack, enumhand);
             }
@@ -1695,7 +1695,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     }
 
                     if (event.isCancelled()) {
-                        this.player.updateInventory(this.player.activeContainer); // Paper - Refresh player inventory
+                        this.core.lamius.Lamius.InventoryUpdateHelper.onRightClick(this.player, packetplayinuseentity.b(), itemInHand); // Lamius - Reduce inventory updates // Paper - Refresh player inventory
                         return;
                     }
                     // CraftBukkit end
@@ -1708,7 +1708,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     this.player.a(entity, enumhand);
                     // CraftBukkit start
                     if (!itemInHand.isEmpty() && itemInHand.getCount() <= -1) {
-                        this.player.updateInventory(this.player.activeContainer);
+                        this.core.lamius.Lamius.InventoryUpdateHelper.onRightClick(this.player, enumhand, itemInHand); // Lamius - Reduce inventory updates
                     }
                     // CraftBukkit end
                     break;
@@ -1717,7 +1717,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     entity.a(this.player, packetplayinuseentity.c(), enumhand);
                     // CraftBukkit start
                     if (!itemInHand.isEmpty() && itemInHand.getCount() <= -1) {
-                        this.player.updateInventory(this.player.activeContainer);
+                        this.core.lamius.Lamius.InventoryUpdateHelper.onRightClick(this.player, enumhand, itemInHand); // Lamius - Reduce inventory updates
                     }
                     // CraftBukkit end
                     break;
@@ -1732,7 +1732,7 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                     // CraftBukkit start
                     if (!itemInHand.isEmpty() && itemInHand.getCount() <= -1) {
-                        this.player.updateInventory(this.player.activeContainer);
+                        this.core.lamius.Lamius.InventoryUpdateHelper.onRightClick(this.player, packetplayinuseentity.b(), itemInHand); // Lamius - Reduce inventory updates
                     }
                     // CraftBukkit end
                     break;
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 5458e442916d4912c4c6eec6223c07d2f2eb95f2..0bc3aa6fc30de57fa87d51f17ae20360ba13b037 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -336,6 +336,7 @@ public class PlayerInteractManager {
                 if (tileentity != null) {
                     this.player.playerConnection.sendPacket(tileentity.getUpdatePacket());
                 }
+                this.core.lamius.Lamius.InventoryUpdateHelper.onBlockBreak(this.player, itemInMainHand); // Lamius - Fix clientside sword damage
                 return false;
             }
         }
@@ -452,7 +453,7 @@ public class PlayerInteractManager {
                 }
 
                 if (!entityhuman.isHandRaised()) {
-                    ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
+                    this.core.lamius.Lamius.InventoryUpdateHelper.onRightClick((EntityPlayer) entityhuman, enumhand, itemstack1); // Lamius - Reduce inventory updates
                 }
 
                 return interactionresultwrapper.a();
@@ -515,7 +516,7 @@ public class PlayerInteractManager {
                     }
                 // Paper end - extend Player Interact cancellation
                 }
-                ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory(); // SPIGOT-2867
+                this.core.lamius.Lamius.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand); // Lamius - Reduce inventory updates // SPIGOT-2867
                 enuminteractionresult = (event.useItemInHand() != Event.Result.ALLOW) ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS;
             } else if (this.gamemode == EnumGamemode.SPECTATOR) {
                 TileEntity tileentity = world.getTileEntity(blockposition);
