From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ruViolence <78062896+ruViolence@users.noreply.github.com>
Date: Wed, 1 Jun 2022 07:47:46 +0500
Subject: [PATCH] perf: guava to caffeine


diff --git a/src/main/java/net/minecraft/server/TileEntitySkull.java b/src/main/java/net/minecraft/server/TileEntitySkull.java
index 611287806ed200195fe9c61fec2dfeb806b4683a..1f8cc423177efa0d082abc314262162181680a9e 100644
--- a/src/main/java/net/minecraft/server/TileEntitySkull.java
+++ b/src/main/java/net/minecraft/server/TileEntitySkull.java
@@ -9,9 +9,6 @@ import javax.annotation.Nullable;
 
 // Spigot start
 import com.google.common.base.Predicate;
-import com.google.common.cache.LoadingCache;
-import com.google.common.cache.CacheBuilder;
-import com.google.common.cache.CacheLoader;
 import com.google.common.util.concurrent.Futures;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ExecutorService;
@@ -24,6 +21,12 @@ import com.mojang.authlib.ProfileLookupCallback;
 import java.util.concurrent.Callable;
 // Spigot end
 
+// Lamius start - Guava to caffeine
+import com.github.benmanes.caffeine.cache.CacheLoader;
+import com.github.benmanes.caffeine.cache.Caffeine;
+import com.github.benmanes.caffeine.cache.LoadingCache;
+// Lamius end
+
 public class TileEntitySkull extends TileEntity /*implements ITickable*/ { // Paper - remove tickable
 
     private int a;
@@ -41,7 +44,7 @@ public class TileEntitySkull extends TileEntity /*implements ITickable*/ { // Pa
                     .setNameFormat("Head Conversion Thread - %1$d")
                     .build()
     );
-    public static final LoadingCache<String, GameProfile> skinCache = CacheBuilder.newBuilder()
+    public static final LoadingCache<String, GameProfile> skinCache = Caffeine.newBuilder() // Lamius - Guava to caffeine
             .maximumSize( 5000 )
             .expireAfterAccess( 60, TimeUnit.MINUTES )
             .build( new CacheLoader<String, GameProfile>()
@@ -207,7 +210,7 @@ public class TileEntitySkull extends TileEntity /*implements ITickable*/ { // Pa
                     Callable<GameProfile> callable = new Callable<GameProfile>() {
                         @Override
                         public GameProfile call() {
-                            final GameProfile profile = skinCache.getUnchecked(gameprofile.getName().toLowerCase(java.util.Locale.ROOT));
+                            final GameProfile profile = skinCache.get(gameprofile.getName().toLowerCase(java.util.Locale.ROOT)); // Lamius - Guava to caffeine
                             MinecraftServer.getServer().processQueue.add(new Runnable() {
                                 @Override
                                 public void run() {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ae9a6031fe04d24b1fc322b1a4747589ace2b0e5..95bc3e2e328c9faf79ef9a65a47c7b779708d564 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -156,7 +156,7 @@ public final class CraftServer implements Server {
     private YamlConfiguration configuration;
     private YamlConfiguration commandsConfiguration;
     private final Yaml yaml = new Yaml(new SafeConstructor());
-    private final Map<UUID, OfflinePlayer> offlinePlayers = new MapMaker().weakValues().makeMap();
+    private final com.github.benmanes.caffeine.cache.Cache<UUID, OfflinePlayer> offlinePlayers = com.github.benmanes.caffeine.cache.Caffeine.newBuilder().weakValues().build(); // Lamius - Guava to caffeine
     private final EntityMetadataStore entityMetadata = new EntityMetadataStore();
     private final PlayerMetadataStore playerMetadata = new PlayerMetadataStore();
     private final WorldMetadataStore worldMetadata = new WorldMetadataStore();
@@ -1392,7 +1392,7 @@ public final class CraftServer implements Server {
                 result = getOfflinePlayer(profile);
             }
         } else {
-            offlinePlayers.remove(result.getUniqueId());
+            offlinePlayers.invalidate(result.getUniqueId()); // Lamius - Guava to caffeine
         }
 
         return result;
@@ -1404,13 +1404,13 @@ public final class CraftServer implements Server {
 
         OfflinePlayer result = getPlayer(id);
         if (result == null) {
-            result = offlinePlayers.get(id);
+            result = offlinePlayers.getIfPresent(id); // Lamius - Guava to caffeine
             if (result == null) {
                 result = new CraftOfflinePlayer(this, new GameProfile(id, null));
                 offlinePlayers.put(id, result);
             }
         } else {
-            offlinePlayers.remove(id);
+            offlinePlayers.invalidate(id); // Lamius - Guava to caffeine
         }
 
         return result;
