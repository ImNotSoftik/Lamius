From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ruViolence <78062896+ruViolence@users.noreply.github.com>
Date: Wed, 1 Jun 2022 09:46:34 +0500
Subject: [PATCH] perf: deactivate PooledBlockPosition


diff --git a/src/main/java/net/minecraft/server/BlockPosition.java b/src/main/java/net/minecraft/server/BlockPosition.java
index e0c122487f631b7945486c538e8e7154b4a080dc..3c8f2520c74afcb4e9bc68932401527c03e3f6cf 100644
--- a/src/main/java/net/minecraft/server/BlockPosition.java
+++ b/src/main/java/net/minecraft/server/BlockPosition.java
@@ -283,8 +283,10 @@ public class BlockPosition extends BaseBlockPosition {
 
     public static final class PooledBlockPosition extends BlockPosition.MutableBlockPosition {
 
+        /* // Lamius start - Deactivate PooledBlockPosition
         private boolean f;
         private static final List<BlockPosition.PooledBlockPosition> g = Lists.newArrayList();
+        */ // Lamius end
 
         private PooledBlockPosition(int i, int j, int k) {
             super(i, j, k);
@@ -300,6 +302,7 @@ public class BlockPosition extends BaseBlockPosition {
         }
 
         public static BlockPosition.PooledBlockPosition e(int i, int j, int k) {
+            /* // Lamius start - Deactivate PooledBlockPosition
             // List list = BlockPosition.PooledBlockPosition.g; // Lamius - Unused
 
             synchronized (BlockPosition.PooledBlockPosition.g) {
@@ -313,12 +316,14 @@ public class BlockPosition extends BaseBlockPosition {
                     }
                 }
             }
+            */ // Lamius end
 
             return new BlockPosition.PooledBlockPosition(i, j, k);
         }
 
         public void free() { t(); } // Paper - OBFHELPER
         public void t() {
+            /* // Lamius start - Deactivate PooledBlockPosition
             // List list = BlockPosition.PooledBlockPosition.g; // Lamius - Unused
 
             synchronized (BlockPosition.PooledBlockPosition.g) {
@@ -328,13 +333,16 @@ public class BlockPosition extends BaseBlockPosition {
 
                 this.f = true;
             }
+            */ // Lamius end
         }
 
         public BlockPosition.PooledBlockPosition f(int i, int j, int k) {
+            /* // Lamius start - Deactivate PooledBlockPosition
             if (this.f) {
                 BlockPosition.b.error("PooledMutableBlockPosition modified after it was released.", new Throwable());
                 this.f = false;
             }
+            */ // Lamius end
 
             return (BlockPosition.PooledBlockPosition) super.c(i, j, k);
         }
