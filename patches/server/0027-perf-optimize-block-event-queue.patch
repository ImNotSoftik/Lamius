From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ruViolence <78062896+ruViolence@users.noreply.github.com>
Date: Sat, 4 Jun 2022 01:49:17 +0500
Subject: [PATCH] perf: optimize block event queue


diff --git a/src/main/java/net/minecraft/server/BlockActionData.java b/src/main/java/net/minecraft/server/BlockActionData.java
index aa7f0bcb606899c589d7501587dc0f07ee1ea85c..68643c2df7fc26537c80a413c27810c7252f8d41 100644
--- a/src/main/java/net/minecraft/server/BlockActionData.java
+++ b/src/main/java/net/minecraft/server/BlockActionData.java
@@ -6,6 +6,7 @@ public class BlockActionData {
     private final Block b;
     private final int c;
     private final int d;
+    private int hashCode = -1; // Lamius
 
     public BlockActionData(BlockPosition blockposition, Block block, int i, int j) {
         this.a = blockposition;
@@ -40,6 +41,21 @@ public class BlockActionData {
         }
     }
 
+    // Lamius start
+    public int hashCode() {
+        int hash = this.hashCode;
+        if (hash == -1) {
+            hash = 1;
+            hash = 31 * hash + (this.a.hashCode());
+            hash = 31 * hash + (this.b.hashCode());
+            hash = 31 * hash + (this.c);
+            hash = 31 * hash + (this.d);
+            this.hashCode = hash;
+        }
+        return hash;
+    }
+    // Lamius end
+
     public String toString() {
         return "TE(" + this.a + ")," + this.c + "," + this.d + "," + this.b;
     }
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 9180ddae84451e9d60c360639e89824d7662ab85..fd489c2a6aae254557e58b12fe17a2674552b099 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -49,8 +49,12 @@ public class WorldServer extends World implements IAsyncTaskHandler {
     private final PortalTravelAgent portalTravelAgent;
     private final SpawnerCreature spawnerCreature = new SpawnerCreature();
     protected final VillageSiege siegeManager = new VillageSiege(this);
+    /* // Lamius start - Optimize block event queue
     private final WorldServer.BlockActionDataList[] U = new WorldServer.BlockActionDataList[] { new WorldServer.BlockActionDataList(null), new WorldServer.BlockActionDataList(null)};
     private int V;
+    */
+    private final Set<BlockActionData> blockEventPending = new java.util.LinkedHashSet<>(); // Lamius
+    // Lamius end
     private final List<NextTickListEntry> W = Lists.newArrayList();
 
     // CraftBukkit start
@@ -1319,40 +1323,37 @@ public class WorldServer extends World implements IAsyncTaskHandler {
     }
 
     public void playBlockAction(BlockPosition blockposition, Block block, int i, int j) {
-        BlockActionData blockactiondata = new BlockActionData(blockposition, block, i, j);
-        Iterator iterator = this.U[this.V].iterator();
-
-        BlockActionData blockactiondata1;
-
-        do {
-            if (!iterator.hasNext()) {
-                this.U[this.V].add(blockactiondata);
-                return;
-            }
-
-            blockactiondata1 = (BlockActionData) iterator.next();
-        } while (!blockactiondata1.equals(blockactiondata));
-
+        this.blockEventPending.add(new BlockActionData(blockposition, block, i, j)); // Lamius - Optimize block event queue
     }
 
     private void aq() {
-        while (!this.U[this.V].isEmpty()) {
-            int i = this.V;
-
-            this.V ^= 1;
-            Iterator iterator = this.U[i].iterator();
-
-            while (iterator.hasNext()) {
-                BlockActionData blockactiondata = (BlockActionData) iterator.next();
+        // Lamius start - Optimize block event queue
+        Set<BlockActionData> pending = this.blockEventPending;
+        if (!pending.isEmpty()) {
+            PlayerList playerList = this.server.getPlayerList();
+            List<BlockActionData> toIterate = new ArrayList<>(pending.size() + 7);
+            toIterate.addAll(pending);
+            pending.clear();
+
+            while (true) {
+                for (int i = 0; i < toIterate.size(); i++) {
+                    BlockActionData data = toIterate.get(i);
+                    if (this.a(data)) {
+                        BlockPosition pos = data.a();
+                        playerList.sendPacketNearby(null, pos.getX(), pos.getY(), pos.getZ(), 64.0D, this, new PacketPlayOutBlockAction(pos, data.d(), data.b(), data.c()));
+                    }
+                }
 
-                if (this.a(blockactiondata)) {
-                    // CraftBukkit - this.worldProvider.dimension -> this.dimension, // Paper - dimension -> world
-                    this.server.getPlayerList().sendPacketNearby((EntityHuman) null, (double) blockactiondata.a().getX(), (double) blockactiondata.a().getY(), (double) blockactiondata.a().getZ(), 64.0D, this, new PacketPlayOutBlockAction(blockactiondata.a(), blockactiondata.d(), blockactiondata.b(), blockactiondata.c()));
+                if (pending.isEmpty()) {
+                    break;
+                } else {
+                    toIterate.clear();
+                    toIterate.addAll(pending);
+                    pending.clear();
                 }
             }
-
-            this.U[i].clear();
         }
+        // Lamius end
 
     }
 
